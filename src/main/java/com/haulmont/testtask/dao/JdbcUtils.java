package com.haulmont.testtask.dao;

import com.haulmont.testtask.dao.hsqldb.HsqlDaoFactory;

import java.sql.*;

/**
 * Created by Черный on 06.02.2017.
 */
public class JdbcUtils {
    public static void closeQuietly(ResultSet rs) {
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
                System.out.println("Cannot close result set");
            }
        }
    }

    public static void closeQuietly(Statement ps) {
        if (ps != null) {
            try {
                ps.close();
            } catch (SQLException e) {
                System.out.println("Cannot close statement");
            }
        }
    }

    public static void closeQuietly(Connection conn) {
        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
                System.out.println("Cannot close connection");
            }
        }
    }

    public static void createDB() {
        String sql = "CREATE TABLE IF NOT EXISTS customers(" +
                " customer_id BIGINT GENERATED BY DEFAULT AS IDENTITY(start with 1) PRIMARY KEY," +
                " name VARCHAR(30) NOT NULL," +
                " surname VARCHAR(30) NOT NULL," +
                " patronymic VARCHAR (30) NOT NULL," +
                " phone VARCHAR (20) NOT NULL" +
                ");" +
                "CREATE TABLE IF NOT EXISTS orders(" +
                " order_id BIGINT GENERATED BY DEFAULT AS IDENTITY(start with 1) PRIMARY KEY," +
                " description VARCHAR (250)," +
                " customer_id BIGINT NOT NULL," +
                " created_date TIMESTAMP (6) NOT NULL," +
                " end_works_date TIMESTAMP (6)," +
                " price INT," +
                " state_order VARCHAR (30) NOT NULL," +
                " FOREIGN KEY(customer_id) REFERENCES customers(customer_id)" +
                ");";

        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = HsqlDaoFactory.getInstance().getConnection();
            preparedStatement = connection.prepareStatement(sql);
            preparedStatement.execute();
        } catch (Exception e) {
            System.out.println("Create DB exception");
            e.printStackTrace();
        } finally {
            JdbcUtils.closeQuietly(preparedStatement);
            JdbcUtils.closeQuietly(connection);
        }
    }
}
